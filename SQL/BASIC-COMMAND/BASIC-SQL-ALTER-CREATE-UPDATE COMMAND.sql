USE DEMO_DATABASE;
DROP TABLE "DEMO_DATABASE"."PUBLIC"."MKS_CUSTOMERS";

/* CRAETE A TABLE  */
CREATE OR REPLACE TABLE MKS_CUSTOMERS (
Customer_id int,
  Last_name varchar(50),
  First_name varchar(50),
  Birthday DATE,
  Gender varchar(10),
  participant_type varchar(50),
  Regionn_id int,
  marital_status varchar(40)
);

--- RETRIVING DATA FROM DEMO_DATABASE

SELECT * FROM MKS_CUSTOMERS;

SELECT COUNT(*) FROM MKS_CUSTOMER;
--- This customer table has 12305 nos. of records.

SELECT * FROM MKS_CUSTOMER WHERE GENDER='MALE';
--- THIS CODE SHOWS THE CUSTOMERS WHO ARE MALE 

SELECT COUNT(*) FROM MKS_CUSTOMER WHERE GENDER='MALE';
--- Total number of male customers presents in the data are 6558

DESC TABLE MKS_CUSTOMERS; --- DESCRIBE THE TABLE PROPERITES 

/* QUESTION -- WE NEED TO CREATE A AGE COLUMN ON THIS DATA */

SELECT CURRENT_DATE();
SELECT *, datediff(year,BIRTHDAY,'2022-12-25') as age FROM MKS_CUSTOMERS;


/*  we can also add a new column in atble as age by using alter table command*/
/* Modifies the properties, columns, or constraints for an existing table. */
ALTER TABLE MKS_CUSTOMERS
ADD COLUMN AGE INT;

UPDATE MKS_CUSTOMERS
SET AGE =   datediff(year,BIRTHDAY,'2022-12-25') ;


/* CREATE A NEW COL CONSIT OF FULL NAME OF CUSTOMER*/

SELECT * ,CONCAT(fIRST_NAME,' ',LAST_NAME) AS FULL_NAME  FROM MKS_CUSTOMERS;

ALTER TABLE MKS_CUSTOMERS
DROP COLUMN FULL_NAME;

ALTER TABLE MKS_CUSTOMERS
ADD COLUMN FULL_NAME VARCHAR(50);


UPDATE MKS_CUSTOMERS
SET FULL_NAME = CONCAT(fIRST_NAME,' ',LAST_NAME);



/* AS PER MARIATAL STATUS CUSTOMER SEGEMENTATION*/

SELECT DISTINCT(MARITAL_STATUS),COUNT(*) `COUNT`
 FROM MKS_CUSTOMERS
 GROUP BY MARITAL_STATUS;
 
 /* CUSTOMERS WHOSE AGE IS MORE THAN 25 AND PARTICIPATE AS INDIVISUAL*/
 SELECT COUNT(*) FROM MKS_CUSTOMERS WHERE AGE>=25;
 SELECT COUNT(*) FROM MKS_CUSTOMERS WHERE AGE>=25 AND PARTICIPANT_TYPE='INDIVIDUAL';

/* GROUP BY PARTCIPANT TYPE TO KNOW THE COUNT */
SELECT DISTINCT(PARTICIPANT_TYPE),COUNT(*) COUNT 
FROM MKS_CUSTOMERS
GROUP BY PARTICIPANT_TYPE ;


/*
OperatoRS 
=	        Equal	
>	        Greater than	
<	        Less than	
>=	        Greater than or equal	
<=	        Less than or equal	
<>	        Not equal. Note: In some versions of SQL this operator may be written as !=	
BETWEEN 	Between a certain range	
LIKE	    Search for a pattern	
IN	        To specify multiple possible values for a column
*/

--- WHERE CLAUSE 

SELECT * FROM MKS_COMPLAIN;

SELECT * FROM MKS_COMPLAIN WHERE BROKERID = '8946';
--- CUSTOMER HAVING BROKERID 7640 AND CLIENT IS NOT SATISFY
SELECT * FROM MKS_COMPLAIN WHERE ClientSatisfaction= 'N/A' AND BROKERID = '7640' ;
--- NULL VALUE 
SELECT * FROM MKS_COMPLAIN WHERE BROKERID IS NOT NULL;
SELECT * FROM MKS_COMPLAIN WHERE BROKERID IS  NULL;

SELECT TOP 5 * FROM SALES_DATA_FINAL;
SELECT MAX(SALES) FROM SALES_DATA_FINAL;
SELECT MIN(SALES) FROM SALES_DATA_FINAL;
SELECT AVG(SALES) FROM SALES_DATA_FINAL;

___ LIKE OPERATORS;
SELECT * FROM SALES_DATA_FINAL WHERE CUSTOMER_NAME LIKE 'T%';
--- FINDS ANY FILE STARTS WITH t
SELECT * FROM SALES_DATA_FINAL WHERE CUSTOMER_NAME LIKE '%T';
--- FINDS ANY VALUE THAT ENDS WITH T
SELECT * FROM SALES_DATA_FINAL WHERE CUSTOMER_NAME LIKE 'T%t';
--- FINDS ANY VALUE THAT STARTS WITH T AND END WITH T
SELECT * FROM SALES_DATA_FINAL WHERE SALES BETWEEN 100 AND 400;
--- FINDS ANY VALUE THAT HAVE SALES BETWWEEN 100 TO 400
SELECT * FROM SALES_DATA_FINAL WHERE STATE IN ('New South Wales','Ontario');
---- FINDS STATE WHERE STATE ARE BETWEEN NEW_SOUTH_WALES AND ONTARIO
